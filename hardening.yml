---
- name: Hardening
  hosts: hardening
  user: "{{ ansible_user }}"
  become: yes
  gather_facts: yes

  vars:
    directorio: "/etc/fail2ban/"
    permisos: '0644'
    #Definimos variables a usar
  
  tasks:

    - name: Actualizacion del cache con intervalo de una hora
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      #Actualizo cache y que este no se actualize por una hora
          
          
    - name: Actualiza todos los paquetes
      ansible.builtin.apt:
       name: "*"
       state: latest
      notify: Reinicio sistema
      #Actualizo paquetes y reinicio


    - name: Instalacion de fail2ban
      ansible.builtin.apt:
        name: fail2ban
        state: latest
        #Instalamos a fail2ban

    - name: Copiar el archivo de configuracion de fail2ban
      ansible.builtin.copy:
        src:  "{{ directorio }}"jail.conf
        dest:  "{{ directorio }}"jail.local
        owner: root
        group: root
        mode: "{{ permisos }}"
        #Copiamos el archivo de configuracion ya que este se posible que se cambiara al actualizarse
        
    - name: Deshabilitar inicio de sesión basado en contraseña
      ansible.builtin.lineinfile:
       path: "{{ directorio }}"jail.local
       regexp: "{{ item.regexp }}"
       line: "{{ item.line }}"
      loop:
        - { regexp: '^bantime =', line: 'bantime = 1' }
        - { regexp: '^findtime =', line: 'findtime = 1m' }
        - { regexp: '^maxretry =', line: 'maxretry = 3' }
      notify: Reinicio fail2ban
     #Cambiamos el varias linias en el archivo de configuracion asiendo usos de loop para buscar las linas a cambiar
     #Varios de estos cambios se hacen para mejor probar y cumplir con lo estipulado, luego de estos sericiara el servicio

     
    - name: Aseguramos que fail2ban esta iniciado y abilitado
      service:
        name: fail2ban
        state: started
        enabled: yes
        #Nos aseguramos que fail2ban esta iniciado y abilitado
      

    - name: UFW politica de negar trafico entrante
      community.general.ufw:
       state: enabled
       policy: deny
       direction: incoming
      notify: Reinicio ufw
     #Cambio las reglias de entrada del firewall y notifico para que se reinicie
        

    - name: UFW politica de permitir SSH entrante
      community.general.ufw:
       rule: allow
       name: OpenSSH
      notify: Reinicio ufw
      #Cambio las reglias del firewall para permitir SSH y notifico que se reinicie

   
    - name: Deshabilitar inicio de sesión basado en contraseña
      ansible.builtin.lineinfile:
       path: /etc/ssh/sshd_config
       regexp: '#PasswordAuthentication'
       line: PasswordAuthentication no
      notify: Reinicio SSH
      #Edito el archivo de configuracion de SSH para no permitir ingresos con contraseña
      # y solo dejando entrar con llaves
      

    - name: Deshabilitar el usuario ROOT para login
      ansible.builtin.lineinfile:
       path: /etc/ssh/sshd_config
       regexp: '#PermitRootLogin'
       line: PermitRootLogin no
      notify: Reinicio SSH
      #Edito el archivo de configuracion de SSH para no permitir ingresos con root



#handlres para reiniciar servicios y sistema 
  handlers:
    - name: Reinicio SSH
      service:
        name:  "{{ ssh_service }}"
        state: restarted

    - name: Reinicio ufw
      service:
        name:  ufw
        state: restarted

    - name: Reinicio fail2ban
      service:
        name:  fail2ban
        state: restarted

    - name: Reinicio sistema
      ansible.builtin.reboot:
        msg: "Reiniciando sistema"
...
